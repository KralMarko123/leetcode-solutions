import {
	ARITHMETIC_PROGRESSION_APPROACH,
	BEST_TIME_TO_BUY_AND_SELL_STOCK_APPROACH,
	BINARY_SEARCH_APPROACH,
	CAN_PLACE_FLOWERS_APPROACH,
	CONTAINS_DUPLICATE_APPROACH,
	CONTAINS_DUPLICATE_APPROACH_TWO,
	EXCEL_SHEET_COLUMN_NUMBER_APPROACH,
	FIND_DISAPPEARED_NUMBERS_APPROACH,
	FIND_INDEX_OF_FIRST_OCCURRENCE_IN_A_STRING_APPROACH,
	FIND_NUMBERS_WITH_EVEN_NUMBER_OF_DIGITS_APPROACH,
	FIRST_UNIQUE_CHARACTER_IN_A_STRING_APPROACH,
	FIZZ_BUZZ_APPROACH,
	HAPPY_NUMBER_APPROACH,
	INTERSECTION_OF_TWO_ARRAYS_APPROACH,
	LONGEST_CONSECUTIVE_SEQUENCE_APPROACH,
	MEDIAN_OF_TWO_SORTED_ARRAYS_APPROACH,
	MIN_STACK_APPROACH,
	REMOVE_NTH_NODE_FROM_END_OF_LIST_APPROACH,
	REVER_INTEGER_APPROACH,
	STRING_TO_INTEGER_ATOI_APPROACH,
	THREE_SUM_APPROACH,
	TWO_SUM_APPROACH,
	VALID_PARENTHESES_APPROACH,
	ZIGZAG_CONVERSION_APPROACH
} from './APPROACHES';
import {
	ARITHMETIC_PROGRESSION_SNIPPET,
	BEST_TIME_TO_BUY_AND_SELL_STOCK_SNIPPET,
	BINARY_SEARCH_SNIPPET,
	CAN_PLACE_FLOWERS_SNIPPET,
	CONTAINS_DUPLICATE_SNIPPET,
	CONTAINS_DUPLICATE_TWO_SNIPPET,
	EXCEL_SHEET_COLUMN_NUMBER_SNIPPET,
	FIND_DISAPPEARED_NUMBERS_SNIPPET,
	FIND_INDEX_OF_FIRST_OCCURRENCE_IN_A_STRING_SNIPPET,
	FIND_NUMBERS_WITH_EVEN_NUMBER_OF_DIGITS_SNIPPET,
	FIRST_UNIQUE_CHARACTER_IN_A_STRING_SNIPPET,
	FIZZ_BUZZ_SNIPPET,
	HAPPY_NUMBER_SNIPPET,
	INTERSECTION_OF_TWO_ARRAYS_SNIPPET,
	LONGEST_CONSECUTIVE_SEQUENCE_SNIPPET,
	MEDIAN_OF_TWO_SORTED_ARRAYS_SNIPPET,
	MIN_STACK_SNIPPET,
	REMOVE_NTH_NODE_FROM_END_OF_LIST_SNIPPET,
	REVER_INTEGER_SNIPPET,
	STRING_TO_INTEGER_ATOI_SNIPPET,
	THREE_SUM_SNIPPET,
	TWO_SUM_SNIPPET,
	VALID_PARENTHESES_SNIPPET,
	ZIGZAG_CONVERSION_SNIPPET
} from './CODE_SNIPPETS';
import { EASY, HARD, MEDIUM } from './MISC';
import {
	ARITHMETIC_PROGRESSION_DESCRIPTION,
	BEST_TIME_TO_BUY_AND_SELL_STOCK_DESCRIPTION,
	BINARY_SEARCH_DESCRIPTION,
	CAN_PLACE_FLOWERS_DESCRIPTION,
	CONTAINS_DUPLICATE_DESCRIPTION,
	CONTAINS_DUPLICATE_TWO_DESCRIPTION,
	EXCEL_SHEET_COLUMN_NUMBER_DESCRIPTION,
	FIND_DISAPPEARED_NUMBERS_DESCRIPTION,
	FIND_INDEX_OF_FIRST_OCCURRENCE_IN_A_STRING_DESCRIPTION,
	FIND_NUMBERS_WITH_EVEN_NUMBER_OF_DIGITS_DESCRIPTION,
	FIRST_UNIQUE_CHARACTER_IN_A_STRING_DESCRIPTION,
	FIZZ_BUZZ_DESCRIPTION,
	HAPPY_NUMBER_DESCRIPTION,
	INTERSECTION_OF_TWO_ARRAYS_DESCRIPTION,
	LONGEST_CONSECUTIVE_SEQUENCE_DESCRIPTION,
	MEDIAN_OF_TWO_SORTED_ARRAYS_DESCRIPTION,
	MIN_STACK_DESCRIPTION,
	REMOVE_NTH_NODE_FROM_END_OF_LIST_DESCRIPTION,
	REVER_INTEGER_DESCRIPTION,
	STRING_TO_INTEGER_ATOI_DESCRIPTION,
	THREE_SUM_DESCRIPTION,
	TWO_SUM_DESCRIPTION,
	VALID_PARENTHESES_DESCRIPTION,
	ZIGZAG_CONVERSION_DESCRIPTION
} from './PROBLEM_DESCRIPTIONS';
import {
	ARITHMETIC_PROGRESSION_LINK,
	BEST_TIME_TO_BUY_AND_SELL_STOCK_LINK,
	BINARY_SEARCH_LINK,
	CAN_PLACE_FLOWERS_LINK,
	CONTAINS_DUPLICATE_LINK,
	CONTAINS_DUPLICATE_TWO_LINK,
	EXCEL_SHEET_COLUMN_NUMBER_LINK,
	FIND_DISAPPEARED_NUMBERS_LINK,
	FIND_INDEX_OF_FIRST_OCCURRENCE_IN_A_STRING_LINK,
	FIND_NUMBERS_WITH_EVEN_NUMBER_OF_DIGITS_LINK,
	FIRST_UNIQUE_CHARACTER_IN_A_STRING_LINK,
	FIZZ_BUZZ_LINK,
	HAPPY_NUMBER_LINK,
	INTERSECTION_OF_TWO_ARRAYS_LINK,
	LONGEST_CONSECUTIVE_SEQUENCE_LINK,
	MEDIAN_OF_TWO_SORTED_ARRAYS_LINK,
	MIN_STACK_LINK,
	REMOVE_NTH_NODE_FROM_END_OF_LIST_LINK,
	REVERSE_INTEGER_LINK,
	STRING_TO_INTEGER_ATOI_LINK,
	THREE_SUM_LINK,
	TWO_SUM_LINK,
	VALID_PARENTHESES_LINK,
	ZIGZAG_CONVERSION_LINK
} from './PROBLEM_LINKS';

export const EASY_PROBLEMS = [
	{
		title: 'Best Time to Buy and Sell Stock',
		difficulty: EASY,
		description: BEST_TIME_TO_BUY_AND_SELL_STOCK_DESCRIPTION,
		approach: BEST_TIME_TO_BUY_AND_SELL_STOCK_APPROACH,
		codeSnippet: BEST_TIME_TO_BUY_AND_SELL_STOCK_SNIPPET,
		link: BEST_TIME_TO_BUY_AND_SELL_STOCK_LINK,
		number: 121
	},
	{
		title: 'Binary Search',
		difficulty: EASY,
		description: BINARY_SEARCH_DESCRIPTION,
		approach: BINARY_SEARCH_APPROACH,
		codeSnippet: BINARY_SEARCH_SNIPPET,
		link: BINARY_SEARCH_LINK,
		number: 704
	},
	{
		title: 'Can Make Artihmetic Progression From Sequence',
		difficulty: EASY,
		description: ARITHMETIC_PROGRESSION_DESCRIPTION,
		approach: ARITHMETIC_PROGRESSION_APPROACH,
		codeSnippet: ARITHMETIC_PROGRESSION_SNIPPET,
		link: ARITHMETIC_PROGRESSION_LINK,
		number: 1502
	},
	{
		title: 'Can Place Flowers',
		difficulty: EASY,
		description: CAN_PLACE_FLOWERS_DESCRIPTION,
		approach: CAN_PLACE_FLOWERS_APPROACH,
		codeSnippet: CAN_PLACE_FLOWERS_SNIPPET,
		link: CAN_PLACE_FLOWERS_LINK,
		number: 605
	},
	{
		title: 'Contains Duplicate',
		difficulty: EASY,
		description: CONTAINS_DUPLICATE_DESCRIPTION,
		approach: CONTAINS_DUPLICATE_APPROACH,
		codeSnippet: CONTAINS_DUPLICATE_SNIPPET,
		link: CONTAINS_DUPLICATE_LINK,
		number: 217
	},
	{
		title: 'Contains Duplicate II',
		difficulty: EASY,
		description: CONTAINS_DUPLICATE_TWO_DESCRIPTION,
		approach: CONTAINS_DUPLICATE_APPROACH_TWO,
		codeSnippet: CONTAINS_DUPLICATE_TWO_SNIPPET,
		link: CONTAINS_DUPLICATE_TWO_LINK,
		number: 219
	},
	{
		title: 'Excel Sheet Column Number',
		difficulty: EASY,
		description: EXCEL_SHEET_COLUMN_NUMBER_DESCRIPTION,
		approach: EXCEL_SHEET_COLUMN_NUMBER_APPROACH,
		codeSnippet: EXCEL_SHEET_COLUMN_NUMBER_SNIPPET,
		link: EXCEL_SHEET_COLUMN_NUMBER_LINK,
		number: 171
	},
	{
		title: 'Find Numbers with Even Number of Digits',
		difficulty: EASY,
		description: FIND_NUMBERS_WITH_EVEN_NUMBER_OF_DIGITS_DESCRIPTION,
		approach: FIND_NUMBERS_WITH_EVEN_NUMBER_OF_DIGITS_APPROACH,
		codeSnippet: FIND_NUMBERS_WITH_EVEN_NUMBER_OF_DIGITS_SNIPPET,
		link: FIND_NUMBERS_WITH_EVEN_NUMBER_OF_DIGITS_LINK,
		number: 1295
	},
	{
		title: 'Find the Index of the First Occurrence in a String',
		difficulty: EASY,
		description: FIND_INDEX_OF_FIRST_OCCURRENCE_IN_A_STRING_DESCRIPTION,
		approach: FIND_INDEX_OF_FIRST_OCCURRENCE_IN_A_STRING_APPROACH,
		codeSnippet: FIND_INDEX_OF_FIRST_OCCURRENCE_IN_A_STRING_SNIPPET,
		link: FIND_INDEX_OF_FIRST_OCCURRENCE_IN_A_STRING_LINK,
		number: 28
	},
	{
		title: 'First Unique Character in a String',
		difficulty: EASY,
		description: FIRST_UNIQUE_CHARACTER_IN_A_STRING_DESCRIPTION,
		approach: FIRST_UNIQUE_CHARACTER_IN_A_STRING_APPROACH,
		codeSnippet: FIRST_UNIQUE_CHARACTER_IN_A_STRING_SNIPPET,
		link: FIRST_UNIQUE_CHARACTER_IN_A_STRING_LINK,
		number: 387
	},
	{
		title: 'Fizz Buzz',
		difficulty: EASY,
		description: FIZZ_BUZZ_DESCRIPTION,
		approach: FIZZ_BUZZ_APPROACH,
		codeSnippet: FIZZ_BUZZ_SNIPPET,
		link: FIZZ_BUZZ_LINK,
		number: 412
	},
	{
		title: 'Happy Number',
		difficulty: EASY,
		description: HAPPY_NUMBER_DESCRIPTION,
		approach: HAPPY_NUMBER_APPROACH,
		codeSnippet: HAPPY_NUMBER_SNIPPET,
		link: HAPPY_NUMBER_LINK,
		number: 202
	},
	{
		title: 'Intersection of Two Arrays',
		difficulty: EASY,
		description: INTERSECTION_OF_TWO_ARRAYS_DESCRIPTION,
		approach: INTERSECTION_OF_TWO_ARRAYS_APPROACH,
		codeSnippet: INTERSECTION_OF_TWO_ARRAYS_SNIPPET,
		link: INTERSECTION_OF_TWO_ARRAYS_LINK,
		number: 349
	},
	{
		title: 'Two Sum',
		difficulty: EASY,
		description: TWO_SUM_DESCRIPTION,
		approach: TWO_SUM_APPROACH,
		codeSnippet: TWO_SUM_SNIPPET,
		link: TWO_SUM_LINK,
		number: 1
	},
	{
		title: 'Valid Parentheses',
		difficulty: EASY,
		description: VALID_PARENTHESES_DESCRIPTION,
		approach: VALID_PARENTHESES_APPROACH,
		codeSnippet: VALID_PARENTHESES_SNIPPET,
		link: VALID_PARENTHESES_LINK,
		number: 20
	},
	{
		title: 'Find All Numbers Disappeared in an Array',
		difficulty: EASY,
		description: FIND_DISAPPEARED_NUMBERS_DESCRIPTION,
		approach: FIND_DISAPPEARED_NUMBERS_APPROACH,
		codeSnippet: FIND_DISAPPEARED_NUMBERS_SNIPPET,
		link: FIND_DISAPPEARED_NUMBERS_LINK,
		number: 448
	}
];

export const MEDIUM_PROBLEMS = [
	{
		title: 'Longest Consecutive Sequence',
		difficulty: MEDIUM,
		description: LONGEST_CONSECUTIVE_SEQUENCE_DESCRIPTION,
		approach: LONGEST_CONSECUTIVE_SEQUENCE_APPROACH,
		codeSnippet: LONGEST_CONSECUTIVE_SEQUENCE_SNIPPET,
		link: LONGEST_CONSECUTIVE_SEQUENCE_LINK,
		number: 128
	},
	{
		title: 'Min Stack',
		difficulty: MEDIUM,
		description: MIN_STACK_DESCRIPTION,
		approach: MIN_STACK_APPROACH,
		codeSnippet: MIN_STACK_SNIPPET,
		link: MIN_STACK_LINK,
		number: 155
	},
	{
		title: 'Reverse Integer',
		difficulty: MEDIUM,
		description: REVER_INTEGER_DESCRIPTION,
		approach: REVER_INTEGER_APPROACH,
		codeSnippet: REVER_INTEGER_SNIPPET,
		link: REVERSE_INTEGER_LINK,
		number: 7
	},
	{
		title: 'Zigzag Conversion',
		difficulty: MEDIUM,
		description: ZIGZAG_CONVERSION_DESCRIPTION,
		approach: ZIGZAG_CONVERSION_APPROACH,
		codeSnippet: ZIGZAG_CONVERSION_SNIPPET,
		link: ZIGZAG_CONVERSION_LINK,
		number: 6
	},
	{
		title: '3Sum',
		difficulty: MEDIUM,
		description: THREE_SUM_DESCRIPTION,
		approach: THREE_SUM_APPROACH,
		codeSnippet: THREE_SUM_SNIPPET,
		link: THREE_SUM_LINK,
		number: 15
	},
	{
		title: 'String to Integer Atoi',
		difficulty: MEDIUM,
		description: STRING_TO_INTEGER_ATOI_DESCRIPTION,
		approach: STRING_TO_INTEGER_ATOI_APPROACH,
		codeSnippet: STRING_TO_INTEGER_ATOI_SNIPPET,
		link: STRING_TO_INTEGER_ATOI_LINK,
		number: 8
	},
	{
		title: 'Remove Nth Node From End of List',
		difficulty: MEDIUM,
		description: REMOVE_NTH_NODE_FROM_END_OF_LIST_DESCRIPTION,
		approach: REMOVE_NTH_NODE_FROM_END_OF_LIST_APPROACH,
		codeSnippet: REMOVE_NTH_NODE_FROM_END_OF_LIST_SNIPPET,
		link: REMOVE_NTH_NODE_FROM_END_OF_LIST_LINK,
		number: 19
	}
];

export const HARD_PROBLEMS = [
	{
		title: 'Median of Two Sorted Arrays',
		difficulty: HARD,
		description: MEDIAN_OF_TWO_SORTED_ARRAYS_DESCRIPTION,
		approach: MEDIAN_OF_TWO_SORTED_ARRAYS_APPROACH,
		codeSnippet: MEDIAN_OF_TWO_SORTED_ARRAYS_SNIPPET,
		link: MEDIAN_OF_TWO_SORTED_ARRAYS_LINK,
		number: 4
	}
];

export const PROBLEMS = [...EASY_PROBLEMS, ...MEDIUM_PROBLEMS, ...HARD_PROBLEMS];
